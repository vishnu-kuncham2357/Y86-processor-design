$date
	Thu Feb 23 15:36:26 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module fetch_tb $end
$var wire 64 ! valc [63:0] $end
$var wire 64 " valP [63:0] $end
$var wire 4 # rB [3:0] $end
$var wire 4 $ rA [3:0] $end
$var wire 1 % mem_error $end
$var wire 1 & invalid_instr $end
$var wire 4 ' ifun [3:0] $end
$var wire 4 ( icode [3:0] $end
$var wire 1 ) halt $end
$var reg 64 * PC [63:0] $end
$var reg 1 + clk $end
$var reg 80 , instr [0:79] $end
$scope module fetch_call $end
$var wire 64 - PC [63:0] $end
$var wire 1 + clk $end
$var wire 80 . instr [0:79] $end
$var reg 1 ) halt $end
$var reg 4 / icode [3:0] $end
$var reg 4 0 ifun [3:0] $end
$var reg 1 & invalid_instr $end
$var reg 1 % mem_error $end
$var reg 4 1 rA [3:0] $end
$var reg 4 2 rB [3:0] $end
$var reg 64 3 valP [63:0] $end
$var reg 64 4 valc [63:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 4
b1 3
bx 2
bx 1
b0 0
b1 /
b10000011000001001101001110000000000000000000000000000000000000000000000000000 .
b0 -
b10000011000001001101001110000000000000000000000000000000000000000000000000000 ,
0+
b0 *
0)
b1 (
b0 '
0&
0%
bx $
bx #
b1 "
bx !
$end
#10
b11 "
b11 3
b1001 $
b1001 1
b1010 #
b1010 2
b110 (
b110 /
b1100000100110100111000000000000000000000000000000000000000000000000000000000000 ,
b1100000100110100111000000000000000000000000000000000000000000000000000000000000 .
b1 *
b1 -
1+
#20
0+
#30
b1100 "
b1100 3
b1101 !
b1101 4
b111 (
b111 /
b1110000000000000000000000000000000000000000000000000000000000000000110100000000 ,
b1110000000000000000000000000000000000000000000000000000000000000000110100000000 .
b11 *
b11 -
1+
#40
0+
#50
b1101 "
b1101 3
1)
b0 (
b0 /
b1000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ,
b1000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx .
b1100 *
b1100 -
1+
